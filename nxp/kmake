#!/bin/sh
# $1 = kernel
# $2 = source me file
# $3 = if null is a standard compile else contains a .config

KERNEL=$1
SOURCEMEFILE=$2
DTS=$3
LAYERSCAPE="linux-4.9.105_layerscape"

cleanup_and_configure() {
	make mrproper
	make distclean
	make ${DTS}
}

echo "Working on ${KERNEL} with ${SOURCEMEFILE}"
echo "1" > /tmp/result
. ../${SOURCEMEFILE}
cd ../../Kernel/${KERNEL}
if [ "$KERNEL" = "linux-imx_4.1.15_1.2.0_ga" ]; then
	! [ -z "${DTS}" ] && cleanup_and_configure
	make -j32 zImage modules
	[ ! "$?" = "0" ] && exit
	cd kernel-module-imx-gpu-viv
	export KERNEL_SRC=..
	make -j32
	[ ! "$?" = "0" ] && exit
	cd ..
	cp arch/arm/boot/zImage ../../Blobs/linux-nxp_p-4.1.15.2_zImage
	cd ../../Deploy
	rm p_zImage
	ln -s ../Kernel/${KERNEL}/arch/arm64/boot/Image p_zImage
elif [ "$KERNEL" = "$LAYERSCAPE" ]; then
	! [ -z "${DTS}" ] && cleanup_and_configure
	make -j32 Image
	[ ! "$?" = "0" ] && exit
	make -j32 modules
	[ ! "$?" = "0" ] && exit
	make freescale/fsl-ls1012a-rdb.dtb
	make freescale/fsl-ls1012a-frdm.dtb
	make freescale/novasomn1-ls1012a.dtb
	mkimage -A arm -O linux  -C none -n "linux" -a 0x80080000 -d arch/arm64/boot/Image uImage
	cp uImage ../../Blobs/linux-nxp-n1-4.14.47_uImage
	cd ../../Deploy
	rm n1_Image
	ln -s ../Kernel/${KERNEL}/arch/arm64/boot/Image n1_uImage
else
	! [ -z "${DTS}" ] && cleanup_and_configure
	make -j32 zImage
	[ ! "$?" = "0" ] && exit
	make -j32 modules
	[ ! "$?" = "0" ] && exit
	cp arch/arm/boot/zImage ../../Blobs/linux-nxp_u-4.1.43_zImage
	cd ../../Deploy
	rm u_Image
	ln -s ../Kernel/${KERNEL}/arch/arm64/boot/Image u_uImage
fi
echo "0" > /tmp/result
